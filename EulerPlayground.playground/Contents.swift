import Foundation
@testable import EulerFramework
//: Playground - noun: a place where people can play

//: Question 1:
//: If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

//Find the sum of all the multiples of 3 or 5 below 1000.

let firstQuestion = FirstQuestion()
firstQuestion.finalSum(firstNum: 3, secondNum: 5, upperLimit: 1000)

//: Question 2:
/*
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 
 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 
 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 
 */
func fib1(nth: Int) -> Int {
    if nth == 0 {
        return 0
    }
    if nth == 1  {
        return 1
    }
    if nth == 2 {
        return 2
    }
    return fib1(nth: nth - 1) + fib1(nth: nth - 2)
    
}
Date().timeIntervalSince1970
fib1(nth: 10)
Date().timeIntervalSince1970

func fib2(nth:Int) -> Int {
    var arr: [Int] = []
    arr.append(1)
    arr.append(2)
    for i in 2..<nth {
        arr.append(arr[i - 1] + arr[i - 2])
    }
    return arr.last ?? 0
}
Date().timeIntervalSince1970
fib2(nth: 10)
Date().timeIntervalSince1970


